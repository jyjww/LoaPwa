services:
  db:
    image: postgres:15
    container_name: loa-postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-loa}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-loa}
      POSTGRES_DB: ${POSTGRES_DB:-loa}
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -U ${POSTGRES_USER:-loa} -d ${POSTGRES_DB:-loa}']
      interval: 5s
      timeout: 3s
      retries: 10
    networks: [app]

  server:
    build:
      context: ..
      dockerfile: Backend/Dockerfile
    container_name: loa-server
    command: npm run start:dev
    ports:
      - '4000:4000'
    env_file:
      - ../Backend/.env.development
    environment:
      NODE_ENV: development
      PORT: 4000
      DATABASE_URL: ${DATABASE_URL:-postgres://loa:loa@db:5432/loa}
    depends_on:
      db:
        condition: service_healthy
    volumes:
      - ../Backend:/app/Backend
      - ../shared:/app/Backend/shared
      - /app/Backend/node_modules
    networks: [app]

  frontend:
    build:
      context: ../PwaFrontend
      dockerfile: Dockerfile
    container_name: loa-frontend
    command: npm run dev -- --host 0.0.0.0 --port 5173
    ports:
      - '5173:5173'
    env_file:
      - ../PwaFrontend/.env.development
    environment:
      NODE_ENV: development
      VITE_HMR_HOST: localhost
      VITE_HMR_PORT: 5173
    volumes:
      - ../PwaFrontend:/app
      - ../shared:/app/PwaFrontend/shared
      # - /app/PwaFrontend/node_modules
    depends_on:
      - server
    networks: [app]

networks:
  app:
    driver: bridge

volumes:
  pgdata:
